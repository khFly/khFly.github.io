[{"id":"754c7ac865a1dfe8328add3fcf102e2d","title":"Github上传和Hexo部署","content":"一、Hexo部署和常用命令前提：已安装git和node.js\n\n在 GitHub 上创建一个新的 repository，名称必须为 username.github.io（其中 “username” 是你在 GitHub 上的用户名）。\n\n确保你本地安装 Git 工具，然后打开 Git Bash 终端。\n\n输入以下命令拉取托管空间\ngit clone https:&#x2F;&#x2F;github.com&#x2F;username&#x2F;username.github.io.git\n\n​      这将会在本地创建一个名为 username.github.io 的文件夹，我们称之为空间文件夹。\n4.确保本地安装了 Node.js ，在 Git Bash 终端中输入以下命令来安装 Hexo：\nnpm install -g hexo-cli\nhexo init myBlog\ncd myBlog\nnpm install\n\n5.在命令行终端中，输入以下命令来安装 GitHub 部署插件：\nnpm install hexo-deployer-git --save\n\n6.修改 _config.yml 文件，打开编辑器，输入以下命令：\ndeploy:\n  type: git\n  repo: https:&#x2F;&#x2F;github.com&#x2F;username&#x2F;username.github.io.git\n  branch: gh-pages(注意这个分支也可以为main)\n\n7.新建一篇文章\nhexo new &quot;My New Post&quot;\n\n8.在 Git Bash 终端中，执行以下命令预览并生成博客：\nhexo generate\nhexo server\n\n9.该命令将在本地启动一个网站，网址为 http://localhost:4000，打开浏览器窗口后输入该网址可以看到博客。\n10.确认无误后，在 Git Bash 终端中执行以下命令进行部署：\nhexo deploy\n\n完成后，刷新你的空间页面即可看到新写的博客。注意不要忘记提交源文件到 GitHub 上的 “master” 分支，部署博客到 GitHub 上的 “gh-pages” 分支，否则空间页不会被更新。希望这个指南对你有所帮助。\n二、项目上传至github仓库中1.创建github repository1-1登录github\n如果不是纯纯小白，那么github账号应该是有的吧\n1-2创建repository（仓库）\n\n输入相应信息，输入项目名称\n\n1-3复制一下，待会有用\n\n2.开始上传项目2-1右键要上传的项目，选择git bash here\n\n2-2输入git init，在当前项目的目录中生成本地的git管理（会发现在当前目录下多了一个.git文件夹）\n\n\n2-3输入git add .这个是将项目上所有的文件添加到仓库中的意思，如果想添加某个特定的文件，只需把“.”换成这个特定的文件名即可。\n\n2-4用git status 可以查看当前仓库的提交状态(这一步可以忽略，只是查看提交到本地的代码是否成功);\n\n2-5然后输入git commit -m &quot;提交信息&quot; （提交的信息是你的项目说明）\n这里如果出现以下内容，则需要你输入自己的账号或名字。（注： git commit 后面加 -m 表示可以直接输入提交说明，如果不加 -m ，直接输入git commit，就会弹出一个类似于 vim 的界面，让你输入提交说明。)有些刚开使用的用户输入提交时会出现错误，如下图：\n\n要先全局配置好在git上的用户名和邮箱，如下图所示输入命令配置邮箱：git config --global user.email &quot;邮箱&quot;\n\n配置用户名：git config --global user.name &quot;名字&quot;\n\n然后再输入提交的命令git commit -m &quot;提交信息&quot; ，如图显示：\n\n2-6、输入git remote add origin https://自己的仓库url地址（上面有说到），将本地的仓库关联到github上。\n\n2-7最后输入命令git push -u origin master（此操作目的是把本地仓库push到github上面，此步骤需要你输入登录github上的帐号和密码）如出现连接失败问题时，简单一点的操作就是再重新输入几次该命令，也可以百度报错信息搜索其他办法解决此问题。\n\n注：弹出这个Connect to Github的框时，可以到github上申请一个token（很简单，可自行百度），不然直接关闭输入github的邮箱和密码很容易报错。\n2-8上传成功。刷新github上的仓库界面成功显示出来了。\n\n\n![](E:\\major learning\\git\\xkh_blog\\source_posts\\Github项目上传和Hexo部署.assets\\16.png)\n","slug":"Github上传和Hexo部署","date":"2023-06-03T13:53:25.000Z","categories_index":"","tags_index":"git","author_index":"kh"},{"id":"8f0e6ad43d5f3742ca60a6aed6b8cc72","title":"Github-upload-And-Hexo","content":"一、Hexo部署和常用命令前提：已安装git和node.js\n\n在 GitHub 上创建一个新的 repository，名称必须为 username.github.io（其中 “username” 是你在 GitHub 上的用户名）。\n\n确保你本地安装 Git 工具，然后打开 Git Bash 终端。\n\n输入以下命令拉取托管空间\ngit clone https:&#x2F;&#x2F;github.com&#x2F;username&#x2F;username.github.io.git\n\n​      这将会在本地创建一个名为 username.github.io 的文件夹，我们称之为空间文件夹。\n4.确保本地安装了 Node.js ，在 Git Bash 终端中输入以下命令来安装 Hexo：\nnpm install -g hexo-cli\nhexo init myBlog\ncd myBlog\nnpm install\n\n5.在命令行终端中，输入以下命令来安装 GitHub 部署插件：\nnpm install hexo-deployer-git --save\n\n6.修改 _config.yml 文件，打开编辑器，输入以下命令：\ndeploy:\n  type: git\n  repo: https:&#x2F;&#x2F;github.com&#x2F;username&#x2F;username.github.io.git\n  branch: gh-pages(注意这个分支也可以为main)\n\n7.新建一篇文章\nhexo new &quot;My New Post&quot;\n\n8.在 Git Bash 终端中，执行以下命令预览并生成博客：\nhexo generate\nhexo server\n\n9.该命令将在本地启动一个网站，网址为 http://localhost:4000，打开浏览器窗口后输入该网址可以看到博客。\n10.确认无误后，在 Git Bash 终端中执行以下命令进行部署：\nhexo deploy\n\n完成后，刷新你的空间页面即可看到新写的博客。注意不要忘记提交源文件到 GitHub 上的 “master” 分支，部署博客到 GitHub 上的 “gh-pages” 分支，否则空间页不会被更新。希望这个指南对你有所帮助。\n二、项目上传至github仓库中1.创建github repository1-1登录github\n如果不是纯纯小白，那么github账号应该是有的吧\n1-2创建repository（仓库）\n\n输入相应信息，输入项目名称\n\n1-3复制一下，待会有用\n![](E:\\major learning\\git\\xkh_blog\\source_posts\\Github项目上传和Hexo部署.assets\\3-168578093875620.png)\n2.开始上传项目、、、2-1右键要上传的项目，选择git bash here\n![](E:\\major learning\\git\\xkh_blog\\source_posts\\Github项目上传和Hexo部署.assets\\4-168578095089722.png)\n2-2输入git init，在当前项目的目录中生成本地的git管理（会发现在当前目录下多了一个.git文件夹）\n![](E:\\major learning\\git\\xkh_blog\\source_posts\\Github项目上传和Hexo部署.assets\\5-168578096724124.png)\n![](E:\\major learning\\git\\xkh_blog\\source_posts\\Github项目上传和Hexo部署.assets\\6-168578097759626.png)\n2-3输入git add .这个是将项目上所有的文件添加到仓库中的意思，如果想添加某个特定的文件，只需把“.”换成这个特定的文件名即可。\n![](E:\\major learning\\git\\xkh_blog\\source_posts\\Github项目上传和Hexo部署.assets\\7-168578098723928.png)\n2-4用git status 可以查看当前仓库的提交状态(这一步可以忽略，只是查看提交到本地的代码是否成功);\n![](E:\\major learning\\git\\xkh_blog\\source_posts\\Github项目上传和Hexo部署.assets\\8-168578099757330.png)\n2-5然后输入git commit -m &quot;提交信息&quot; （提交的信息是你的项目说明）\n这里如果出现以下内容，则需要你输入自己的账号或名字。（注： git commit 后面加 -m 表示可以直接输入提交说明，如果不加 -m ，直接输入git commit，就会弹出一个类似于 vim 的界面，让你输入提交说明。)有些刚开使用的用户输入提交时会出现错误，如下图：\n![](E:\\major learning\\git\\xkh_blog\\source_posts\\Github项目上传和Hexo部署.assets\\9-168578100577232.png)\n要先全局配置好在git上的用户名和邮箱，如下图所示输入命令配置邮箱：git config --global user.email &quot;邮箱&quot;\n![](E:\\major learning\\git\\xkh_blog\\source_posts\\Github项目上传和Hexo部署.assets\\10-168578101273234.png)\n配置用户名：git config --global user.name &quot;名字&quot;\n![](E:\\major learning\\git\\xkh_blog\\source_posts\\Github项目上传和Hexo部署.assets\\11-168578101942736.png)\n然后再输入提交的命令git commit -m &quot;提交信息&quot; ，如图显示：\n![](E:\\major learning\\git\\xkh_blog\\source_posts\\Github项目上传和Hexo部署.assets\\12-168578102581338.png)\n2-6、输入git remote add origin https://自己的仓库url地址（上面有说到），将本地的仓库关联到github上。\n![](E:\\major learning\\git\\xkh_blog\\source_posts\\Github项目上传和Hexo部署.assets\\13-168578104403042.png)\n2-7最后输入命令git push -u origin master（此操作目的是把本地仓库push到github上面，此步骤需要你输入登录github上的帐号和密码）如出现连接失败问题时，简单一点的操作就是再重新输入几次该命令，也可以百度报错信息搜索其他办法解决此问题。\n![](E:\\major learning\\git\\xkh_blog\\source_posts\\Github项目上传和Hexo部署.assets\\14-168578105445344.png)\n注：弹出这个Connect to Github的框时，可以到github上申请一个token（很简单，可自行百度），不然直接关闭输入github的邮箱和密码很容易报错。\n2-8上传成功。刷新github上的仓库界面成功显示出来了。\n![](E:\\major learning\\git\\xkh_blog\\source_posts\\Github项目上传和Hexo部署.assets\\15-168578110863047.png)\n![](E:\\major learning\\git\\xkh_blog\\source_posts\\Github项目上传和Hexo部署.assets\\16.png)\n","slug":"Github-upload-And-Hexo","date":"2023-06-03T08:26:56.000Z","categories_index":"","tags_index":"git","author_index":"kh"},{"id":"b9663f58f18133b35bfe243f3e916a80","title":"Hello World","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\nQuick StartCreate a new post$ hexo new &quot;My New Post&quot;\n\nMore info: Writing\nRun server$ hexo server\n\nMore info: Server\nGenerate static files$ hexo generate\n\nMore info: Generating\nDeploy to remote sites$ hexo deploy\n\nMore info: Deployment\n","slug":"hello-world","date":"2023-06-02T08:03:29.942Z","categories_index":"","tags_index":"","author_index":"kh"}]