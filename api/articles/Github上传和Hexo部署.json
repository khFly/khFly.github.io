{"title":"Github上传和Hexo部署","uid":"754c7ac865a1dfe8328add3fcf102e2d","slug":"Github上传和Hexo部署","date":"2023-06-03T13:53:25.000Z","updated":"2023-06-03T14:32:33.189Z","comments":true,"path":"api/articles/Github上传和Hexo部署.json","keywords":null,"cover":[],"content":"<h2 id=\"一、Hexo部署和常用命令\"><a href=\"#一、Hexo部署和常用命令\" class=\"headerlink\" title=\"一、Hexo部署和常用命令\"></a>一、Hexo部署和常用命令</h2><p>前提：已安装git和node.js</p>\n<ol>\n<li><p>在 GitHub 上创建一个新的 repository，名称必须为 <code>username.github.io</code>（其中 “username” 是你在 GitHub 上的用户名）。</p>\n</li>\n<li><p>确保你本地安装 Git 工具，然后打开 Git Bash 终端。</p>\n</li>\n<li><p>输入以下命令拉取托管空间</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">git clone https:&#x2F;&#x2F;github.com&#x2F;username&#x2F;username.github.io.git<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ol>\n<p>​      这将会在本地创建一个名为 <code>username.github.io </code>的文件夹，我们称之为空间文件夹。</p>\n<p>4.确保本地安装了 Node.js ，在 Git Bash 终端中输入以下命令来安装 Hexo：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">npm install -g hexo-cli\nhexo init myBlog\ncd myBlog\nnpm install<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>5.在命令行终端中，输入以下命令来安装 GitHub 部署插件：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">npm install hexo-deployer-git --save<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>6.修改 <code>_config.yml</code> 文件，打开编辑器，输入以下命令：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">deploy:\n  type: git\n  repo: https:&#x2F;&#x2F;github.com&#x2F;username&#x2F;username.github.io.git\n  branch: gh-pages(注意这个分支也可以为main)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>7.新建一篇文章</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">hexo new &quot;My New Post&quot;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>8.在 Git Bash 终端中，执行以下命令预览并生成博客：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">hexo generate\nhexo server<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>9.该命令将在本地启动一个网站，网址为 <code>http://localhost:4000</code>，打开浏览器窗口后输入该网址可以看到博客。</p>\n<p>10.确认无误后，在 Git Bash 终端中执行以下命令进行部署：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">hexo deploy<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>完成后，刷新你的空间页面即可看到新写的博客。注意不要忘记提交源文件到 GitHub 上的 “master” 分支，部署博客到 GitHub 上的 “gh-pages” 分支，否则空间页不会被更新。希望这个指南对你有所帮助。</p>\n<h2 id=\"二、项目上传至github仓库中\"><a href=\"#二、项目上传至github仓库中\" class=\"headerlink\" title=\"二、项目上传至github仓库中\"></a>二、项目上传至github仓库中</h2><h3 id=\"1-创建github-repository\"><a href=\"#1-创建github-repository\" class=\"headerlink\" title=\"1.创建github repository\"></a>1.创建github repository</h3><p>1-1登录github</p>\n<p>如果不是纯纯小白，那么github账号应该是有的吧</p>\n<p>1-2创建repository（仓库）</p>\n<p><img src=\"/images/1.png\"></p>\n<p>输入相应信息，输入项目名称</p>\n<p><img src=\"/images/2.png\"></p>\n<p>1-3复制一下，待会有用</p>\n<p><img src=\"/images/3.png\"></p>\n<h3 id=\"2-开始上传项目\"><a href=\"#2-开始上传项目\" class=\"headerlink\" title=\"2.开始上传项目\"></a>2.开始上传项目</h3><p>2-1右键要上传的项目，选择git bash here</p>\n<p><img src=\"/images/4.png\"></p>\n<p>2-2输入<code>git init</code>，在当前项目的目录中生成本地的git管理（会发现在当前目录下多了一个.git文件夹）</p>\n<p><img src=\"/images/5.png\"></p>\n<p><img src=\"/images/6.png\"></p>\n<p>2-3输入<code>git add .</code>这个是将项目上所有的文件添加到仓库中的意思，如果想添加某个特定的文件，只需把“.”换成这个特定的文件名即可。</p>\n<p><img src=\"/images/7.png\"></p>\n<p>2-4用<code>git status</code> 可以查看当前仓库的提交状态(这一步可以忽略，只是查看提交到本地的代码是否成功);</p>\n<p><img src=\"/images/8.png\"></p>\n<p>2-5然后输入<code>git commit -m &quot;提交信息&quot;</code> （提交的信息是你的项目说明）</p>\n<p>这里如果出现以下内容，则需要你输入自己的账号或名字。<br>（注： git commit 后面加 -m 表示可以直接输入提交说明，如果不加 -m ，直接输入git commit，就会弹出一个类似于 vim 的界面，让你输入提交说明。)<br>有些刚开使用的用户输入提交时会出现错误，如下图：</p>\n<p><img src=\"/images/9.png\"></p>\n<p>要先全局配置好在git上的用户名和邮箱，如下图所示输入命令<br>配置邮箱：<code>git config --global user.email &quot;邮箱&quot;</code></p>\n<p><img src=\"/images/10.png\"></p>\n<p>配置用户名：<code>git config --global user.name &quot;名字&quot;</code></p>\n<p><img src=\"/images/11.png\"></p>\n<p>然后再输入提交的命令<code>git commit -m &quot;提交信息&quot;</code> ，如图显示：</p>\n<p><img src=\"/images/12.png\"></p>\n<p>2-6、输入<code>git remote add origin https://自己的仓库url地址（上面有说到）</code>，将本地的仓库关联到<a href=\"https://so.csdn.net/so/search?q=github&spm=1001.2101.3001.7020\">github</a>上。</p>\n<p><img src=\"/images/13.png\"></p>\n<p>2-7最后输入命令<code>git push -u origin master</code>（此操作目的是把本地仓库push到github上面，此步骤需要你输入登录github上的帐号和密码）<br>如出现连接失败问题时，简单一点的操作就是再重新输入几次该命令，也可以百度报错信息搜索其他办法解决此问题。</p>\n<p><img src=\"/images/14.png\"></p>\n<p>注：弹出这个Connect to Github的框时，可以到github上申请一个token（很简单，可自行百度），不然直接关闭输入github的邮箱和密码很容易报错。</p>\n<p>2-8上传成功。刷新github上的仓库界面成功显示出来了。</p>\n<p><img src=\"/images/15.png\"></p>\n<p><img src=\"/images/16.png\"></p>\n<h3 id=\"3-关于图片上传时显示不出的问题解决办法：\"><a href=\"#3-关于图片上传时显示不出的问题解决办法：\" class=\"headerlink\" title=\"3.关于图片上传时显示不出的问题解决办法：\"></a>3.关于图片上传时显示不出的问题解决办法：</h3><ol>\n<li>在source目录下创建images文件夹；</li>\n<li>将所需要上传显示的图片存入到images文件夹下；</li>\n<li>在md文件中使用图片引用方式为：<img src=\"/images/15.png\">，这种方式在md文件中不会显示，但是上传后能够显示。</li>\n</ol>\n<h3 id=\"4-关于后期如何快速使用hexo上传自己的文章回顾\"><a href=\"#4-关于后期如何快速使用hexo上传自己的文章回顾\" class=\"headerlink\" title=\"4.关于后期如何快速使用hexo上传自己的文章回顾\"></a>4.关于后期如何快速使用hexo上传自己的文章回顾</h3><ol>\n<li><p>创建新文件：在hexo项目右键打开git bush终端；</p>\n</li>\n<li><p>输入命令：hexo new “新的文章名”；</p>\n</li>\n<li><p>在post中编辑md文件，也就是写文章；</p>\n</li>\n<li><p>上传静态： 依次输入hexo clean、hexo generate、hexo serve测试在静态页面中是否有效；</p>\n</li>\n<li><p>上传github：hexo deploy；</p>\n</li>\n</ol>\n","text":"一、Hexo部署和常用命令前提：已安装git和node.js 在 GitHub 上创建一个新的 repository，名称必须为 username.github.io（其中 “username” 是你在 GitHub 上的用户名）。 确保你本地安装 Git 工具，然后打开 Git...","link":"","photos":[],"count_time":{"symbolsCount":"2.3k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"git","slug":"git","count":1,"path":"api/tags/git.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%80%E3%80%81Hexo%E9%83%A8%E7%BD%B2%E5%92%8C%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">一、Hexo部署和常用命令</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E3%80%81%E9%A1%B9%E7%9B%AE%E4%B8%8A%E4%BC%A0%E8%87%B3github%E4%BB%93%E5%BA%93%E4%B8%AD\"><span class=\"toc-text\">二、项目上传至github仓库中</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E5%88%9B%E5%BB%BAgithub-repository\"><span class=\"toc-text\">1.创建github repository</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E5%BC%80%E5%A7%8B%E4%B8%8A%E4%BC%A0%E9%A1%B9%E7%9B%AE\"><span class=\"toc-text\">2.开始上传项目</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-%E5%85%B3%E4%BA%8E%E5%9B%BE%E7%89%87%E4%B8%8A%E4%BC%A0%E6%97%B6%E6%98%BE%E7%A4%BA%E4%B8%8D%E5%87%BA%E7%9A%84%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95%EF%BC%9A\"><span class=\"toc-text\">3.关于图片上传时显示不出的问题解决办法：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-%E5%85%B3%E4%BA%8E%E5%90%8E%E6%9C%9F%E5%A6%82%E4%BD%95%E5%BF%AB%E9%80%9F%E4%BD%BF%E7%94%A8hexo%E4%B8%8A%E4%BC%A0%E8%87%AA%E5%B7%B1%E7%9A%84%E6%96%87%E7%AB%A0%E5%9B%9E%E9%A1%BE\"><span class=\"toc-text\">4.关于后期如何快速使用hexo上传自己的文章回顾</span></a></li></ol></li></ol>","author":{"name":"kh","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"SpringBoot项目创建及可能创建中可能遇到的问题","uid":"93025a4f2374660189de73b8dfba4cb2","slug":"SpringBoot项目创建及可能创建中可能遇到的问题","date":"2023-06-10T13:32:58.000Z","updated":"2023-06-10T13:42:34.616Z","comments":true,"path":"api/articles/SpringBoot项目创建及可能创建中可能遇到的问题.json","keywords":null,"cover":[],"text":"SpringBoot项目创建步骤及可能遇到的问题1、SpringBoot项目创建（在线创建）注：通过SpringBoot项目在线网站创建项目过程，以及项目创建后可能会遇到的问题 项目创建过程： 进入到SpringBoot项目在线创建网站，输入下图中相应的信息，在线网站为：http...","link":"","photos":[],"count_time":{"symbolsCount":991,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"SpringBoot","slug":"SpringBoot","count":1,"path":"api/tags/SpringBoot.json"}],"author":{"name":"kh","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{}}